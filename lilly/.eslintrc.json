{
  "env": {
    "browser": true,
    "es2022": true
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "standard-with-typescript",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "tsconfigRootDir": ".",
    "project": ["./tsconfig.json"],
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "import",
    "unused-imports"
  ],
  "rules": {
    "react/prop-types": "off",
    // 任意の構文の間に空行を入れるかどうかの定義
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      },
      {
        "blankLine": "any",
        "prev": "singleline-const",
        "next": "return"
      }
    ],

    // 型情報のみの import を import type に強制するルール
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "fixStyle": "separate-type-imports"
      }
    ],

    // オブジェクトの型定義にインターフェースまたは型エイリアスのどちらかを強制するルール
    "@typescript-eslint/consistent-type-definitions": "off",

    // 関数の戻り値に必ず型定義を書かなければいけないルール
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",

    // Promise の誤用を防ぐためのルール
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "off",

    // 使用していない変数の定義を許可しないルール
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],

    // Boolean 値が期待される記述で、Boolean 型以外の使用を許可しないルール
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowString": true,
        "allowNumber": true,
        "allowNullableString": true,
        "allowNullableNumber": true,
        "allowNullableObject": true
      }
    ],

    // トリプルスラッシュ・ディレクティブの使用を許可するかどうかを定義するルール
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "types": "always"
      }
    ],

    // autoFocus 属性の使用を禁止するルール
    "jsx-a11y/no-autofocus": "off",

    // インポートの際のファイル拡張子を記述するかを定義するルール
    "import/extensions": [
      "error",
      {
        "ignorePackages": true,
        "pattern": {
          "js": "never",
          "jsx": "never",
          "ts": "never",
          "tsx": "never"
        }
      }
    ],

    // 最後のインポート文のあとは空行を入れるよう設定
    "import/newline-after-import": "error",

    // モジュールインポートの順番をカスタマイズできるルール
    "import/order": [
      "error",
      {
        "groups": [
          "type",
          "builtin",
          "external",
          "internal",
          ["parent", "sibling"],
          "object",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "@/types/**",
            "group": "type",
            "position": "after"
          },
          {
            "pattern": "{@/**}",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "{[A-Z]*,**/[A-Z]*}",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@@/**",
            "group": "index",
            "position": "after"
          }
        ],
        "newlines-between": "never"
      }
    ],
    "@typescript-eslint/no-var-requires": "off"
  }
}
